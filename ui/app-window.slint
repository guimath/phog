import { Button, VerticalBox, HorizontalBox} from "std-widgets.slint";

export component AppWindow inherits Window {
    in property <int> photo_num: 0;
    in property <int> total_num: 0;
    in property <string> photo_name: "N/A";
    in property <int> photo_rotation: 0;
    in property <image> photo_path;
    in-out property <bool> show_message: false; 
    in property <string> message: "N/A"; 
    in property <float> message_sec_up: 1.2; 
    timer:= Timer {
        interval: root.message_sec_up*1s; 
        running: root.show_message; 
        triggered() => {
            root.show_message = false;
        }
    }
    callback prev(bool);
    callback next(bool);
    callback edit(bool);
    callback delete(bool);
    callback close();
    forward-focus: my-key-handler;
    my-key-handler := FocusScope {
        key-pressed(event) => {
            if (event.text == Key.LeftArrow) {
                root.prev(event.repeat);
            }
            else if (event.text == Key.RightArrow) {
                root.next(event.repeat);
            }
            else if (event.text == "d") {
                if !event.repeat{
                    root.delete(false);
                }
            }
            else if (event.text == "e") {
                if !event.repeat{
                    root.edit(false);
                }
            }
            else if (event.text == Key.Escape) {
                root.close();
            }
            accept
        }
    }
    VerticalBox {
        Image {
            source: root.photo_path;
            visible: true;
            // rotation-angle:root.photo_rotation*1deg ;  // doesn't rescale so meh
        }

        Text {
            text: "\{root.photo_name} (\{root.photo_num}/\{root.total_num})";
            font-size: 25pt;
            height: 25pt;
        }

        // HorizontalBox {
        //     Button {
        //         text: "Delete";
        //         clicked => {
        //             root.delete();
        //         }
        //     }
        //     Button {
        //         text: "To edit";
        //         clicked => {
        //             root.edit();
        //         }
        //     }
        //     Button {
        //         text: "Prev";
        //         clicked => {
        //             root.prev();
        //         }
        //     }
        //     Button {
        //         text: "Next";
        //         clicked => {
        //             root.next();
        //         }
        //     }
        // }
    }

    // A pop-up container
    HorizontalLayout {
        padding-top: 100px;
        alignment: center;
        Rectangle {
            width: 400pt;
            height: 60pt;
            background: #0603358e;
            border-radius: 20px;
            visible: root.show_message; 

            Text {
                text: root.message;
                color: white;
                font-size: 25pt;
            }
        }
    }

}
